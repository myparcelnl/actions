name: 'Generate app credentials'
description: 'Generate credentials and git committer details for a GitHub app.'

inputs:
  app-id:
    description: 'The app ID of the app.'
    required: true

  private-key:
    description: 'The private key of the app.'
    required: true

  owner:
    description: 'The owner of the GitHub App installation (defaults to current repository owner)'
    required: false

  repositories:
    description: 'Repositories to install the GitHub App on (defaults to current repository if owner is unset)'
    required: false

  skip-token-revoke:
    description: 'If truthy, the token will not be revoked when the current job is complete'
    required: false

  github-api-url:
    description: 'The URL of the GitHub REST API.'
    default: ${{ github.api_url }}

outputs:
  name:
    description: 'The name of the app.'
    value: ${{ steps.generate-token.outputs.app-slug }}

  token:
    description: 'The GitHub token of the app.'
    value: ${{ steps.generate-token.outputs.token }}

  git-name:
    description: 'The name to use with git.'
    value: ${{ steps.create-outputs.outputs.git-name }}

  git-email:
    description: 'The email to use with git.'
    value: ${{ steps.create-outputs.outputs.git-email }}

runs:
  using: composite
  steps:
    - uses: actions/create-github-app-token@v1
      id: generate-token
      with:
        app-id: ${{ inputs.app-id }}
        private-key: ${{ inputs.private-key }}
        owner: ${{ inputs.owner }}
        repositories: ${{ inputs.repositories }}
        skip-token-revoke: ${{ inputs.skip-token-revoke }}
        github-api-url: ${{ inputs.github-api-url }}

    - name: 'Set outputs'
      id: create-outputs
      shell: bash
      env:
        APP_SLUG: ${{ steps.generate-token.outputs.app-slug }}
      #language=bash
      run: |
        GIT_NAME="$APP_SLUG[bot]"

        echo "git-name=$GIT_NAME"                           >> $GITHUB_OUTPUT
        echo "git-email=$GIT_NAME@users.noreply.github.com" >> $GITHUB_OUTPUT

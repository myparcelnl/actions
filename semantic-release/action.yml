name: 'Semantic release'
description: 'Run semantic release using the MyParcel bot'

inputs:
  token:
    description: 'GitHub Personal access token'
    required: true

outputs:
  version:
    description: 'The new version'
    value: ${{ steps.post-release.outputs.version }}

  previous-version:
    description: 'The previous version'
    value: ${{ steps.post-release.outputs.previous-version }}

  released:
    description: 'Whether a new version was released'
    value: ${{ steps.post-release.outputs.released }}

runs:
  using: composite
  steps:
    - uses: myparcelnl/actions/setup-git-credentials@main
      with:
        token: ${{ inputs.token }}

    - name: 'Get previous version'
      run: |
        tag=$(git ls-remote --tags --sort="v:refname" | tail -n1 | sed 's/.*\///; s/\^{}//')
        echo "::set-output name=tag::${tag}"
      id: previous-version
      shell: bash

    - name: 'Run semantic release'
      run: npx semantic-release
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}

    - name: 'Get new version'
      run: |
        tag=$(git describe --tags --abbrev=0)
        echo "::set-output name=tag::${tag}"
      id: new-version
      shell: bash

    - name: 'Prepare outputs'
      id: post-release
      run: |
        if [ "${{ steps.previous-version.outputs.tag }}" == "${{ steps.new-version.outputs.tag }}" ]; then
          echo "::set-output name=version::"
          echo "::set-output name=previous-version::${{ steps.previous-version.outputs.tag }}"
          echo "::set-output name=released::false"
        else
          echo "::set-output name=version::${{ steps.new-version.outputs.tag }}"
          echo "::set-output name=previous-version::${{ steps.previous-version.outputs.tag }}"
          echo "::set-output name=released::true"
        fi
      shell: bash

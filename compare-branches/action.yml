name: 'Compare branches'
description: 'Check if there are new commits in head that are not in base'

inputs:
  base:
    description: 'The base branch to compare against'
    required: false
    default: 'main'

  head:
    description: 'The branch to check for new commits'
    required: false
    default: 'develop'

  remote:
    description: 'The remote to use'
    required: false
    default: 'origin'

outputs:
  diff:
    description: 'Whether the branches are different'
    value: ${{ steps.compare.outputs.diff }}

  commits:
    description: 'List of commits in head that are not in base'
    value: ${{ steps.compare.outputs.commits }}

  compare-url:
    description: 'Link to the compare view of both commits'
    value: ${{ steps.compare.outputs.compare-url }}

runs:
  using: 'composite'
  steps:
    - name: 'Compare branches'
      id: compare
      shell: bash
      env:
        REMOTE: ${{ inputs.remote }}
        BASE: ${{ inputs.base }}
        HEAD: ${{ inputs.head }}
        REPOSITORY: ${{ github.repository }}
      #language=bash
      run: |
        RANGE="$REMOTE/$BASE..$REMOTE/$HEAD"
        COMMITS="$(git rev-list --count $RANGE)"
        BASE_URL="https://github.com/$REPOSITORY"
        COMPARE_URL="${BASE_URL}/compare/$BASE...$HEAD"
        HEAD_URL="${BASE_URL}/tree/$HEAD"
        BASE_URL="${BASE_URL}/tree/$BASE"

        if [ $COMMITS -gt 0 ]; then
          echo "diff=true"                                                       >> $GITHUB_OUTPUT
          echo "commits=$(git log --pretty=format:"â€¢ %s (%ar)" $RANGE | jq -sR)" >> $GITHUB_OUTPUT
          echo "compare-url=$COMPARE_URL"                                        >> $GITHUB_OUTPUT

          echo "The following commits are in [$HEAD]($HEAD_URL), but not in [$BASE]($BASE_URL):" >> $GITHUB_STEP_SUMMARY
          echo ""                                                                                >> $GITHUB_STEP_SUMMARY
          echo "| Summary | Commit | Date |"                                                     >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- | --- |"                                                             >> $GITHUB_STEP_SUMMARY
          echo ""                                                                                >> $GITHUB_STEP_SUMMARY
          echo "[Compare]($COMPARE_URL)"                                                         >> $GITHUB_STEP_SUMMARY
          git log --pretty=format:"| %s | [%h]($REPO_URL/commit/%H) | %ar |" $RANGE              >> $GITHUB_STEP_SUMMARY
        else
          echo "diff=false" >> $GITHUB_OUTPUT

          echo "There are no commits in [$HEAD]($HEAD_URL) that are not in [$BASE]($BASE_URL)" >> $GITHUB_STEP_SUMMARY
        fi

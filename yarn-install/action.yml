name: 'Install yarn dependencies'
description: 'Install yarn dependencies using cache'

inputs:
  node-version:
    description: 'The Node.js version to use'
    default: '20'
    required: false

  yarn-args:
    description: 'Arguments to use with yarn install'
    required: false

runs:
  using: composite
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'yarn'

    - name: 'Create variables'
      id: variables
      shell: bash
      #language=bash
      run: |
        version=$(yarn --version | cut -d. -f1)

        if [ "$version" -lt "2" ]; then
          echo "args=--frozen-lockfile" >> $GITHUB_OUTPUT
        else
          echo "cache-folder=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        fi

        echo "version=$version" >> $GITHUB_OUTPUT

    - name: 'Cache yarn downloads'
      if: steps.variables.outputs.version >= 2
      uses: actions/cache@v4
      id: yarn-download-cache
      with:
        path: ${{ steps.variables.outputs.cache-folder }}
        key: yarn-download-${{ inputs.node-version }}-${{ hashFiles('yarn.lock') }}
        restore-keys: |
          yarn-download-${{ inputs.node-version }}-

    - name: 'Cache yarn install state'
      if: steps.variables.outputs.version >= 2
      uses: actions/cache@v4
      id: yarn-install-state-cache
      with:
        path: .yarn/ci-cache/
        key: ${{ runner.os }}-yarn-install-state-${{ inputs.node-version }}-${{ hashFiles('yarn.lock', '.yarnrc.yml') }}

    - name: 'Install yarn dependencies'
      shell: bash
      #language=bash
      run: |
        yarn install ${{ steps.variables.outputs.args }} ${{ inputs.yarn-args }}
      env:
        HUSKY: '0'
        YARN_ENABLE_GLOBAL_CACHE: 'false'
        YARN_INSTALL_STATE_PATH: .yarn/ci-cache/install-state.gz
        YARN_NM_MODE: 'hardlinks-local'

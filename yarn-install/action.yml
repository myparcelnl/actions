name: 'Install yarn dependencies'
description: 'Install yarn dependencies using cache'

inputs:
  node-version:
    description: 'The Node.js version to use'
    required: false

  yarn-args:
    description: 'Arguments to use with yarn install'
    required: false

runs:
  using: composite
  steps:
    - name: 'Hash yarn args'
      id: args
      uses: myparcelnl/actions/hash-string@v4
      with:
        mode: 'args'
        string: ${{ inputs.yarn-args }}

    - uses: myparcelnl/actions/setup-node@v4
      id: setup
      with:
        key: 'yarn'
        node-version: ${{ inputs.node-version }}

    - name: 'Create variables'
      id: variables
      shell: bash
      #language=bash
      run: |
        version=$(yarn --version | cut -d. -f1)

        if [ "$version" -ge "2" ]; then
          echo "cache-folder=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        fi

        echo "version=$version" >> $GITHUB_OUTPUT

    - uses: myparcelnl/actions/create-cache-keys@v4
      id: keys-yarn-download
      with:
        key: 'yarn-download'
        input: |
          ${{ steps.setup.outputs.node-version }}
          ${{ hashFiles('yarn.lock') }}

    - name: 'Cache yarn downloads'
      if: steps.variables.outputs.version >= 2
      uses: actions/cache@v4
      id: yarn-download-cache
      with:
        path: ${{ steps.variables.outputs.cache-folder }}
        key: ${{ steps.keys-yarn-download.outputs.key }}
        restore-keys: ${{ steps.keys-yarn-download.outputs.restore-keys }}

    - uses: myparcelnl/actions/create-cache-keys@v4
      id: keys-yarn-install-state
      with:
        key: ${{ format('{0}{1}-yarn-install-state-', runner.os, runner.arch) }}
        input: |
          ${{ steps.setup.outputs.node-version }}
          ${{ steps.args.outputs.hash }}
          ${{ hashFiles('yarn.lock', '.yarnrc.yml') }}

    - name: 'Cache yarn install state'
      if: steps.variables.outputs.version >= 2
      uses: actions/cache@v4
      id: yarn-install-state-cache
      with:
        path: .yarn/ci-cache/
        key: ${{ steps.keys-yarn-install-state.outputs.key }}
        restore-keys: ${{ steps.keys-yarn-install-state.outputs.restore-keys }}

    - name: 'Install yarn dependencies'
      shell: bash
      #language=bash
      run: |
        yarn install $ARGS
      env:
        ARGS: ${{ steps.args.outputs.string }}
        HUSKY: '0'
        YARN_ENABLE_GLOBAL_CACHE: 'false'
        YARN_INSTALL_STATE_PATH: .yarn/ci-cache/install-state.gz
        YARN_NM_MODE: 'hardlinks-local'

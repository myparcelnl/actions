name: 'Install composer dependencies'
description: 'Set up PHP and install composer dependencies'

inputs:
  command:
    description: 'The composer command to run.'
    required: false
    default: 'install'

  php-version:
    description: 'The php version to use.'
    default: '7.2'
    required: false

  composer-args:
    description: 'Arguments to pass to Composer. Should be a multiline string.'
    required: false

  # Deprecated, use composer-args
  # TODO: Remove in v5
  flags:
    description: 'Flags to use when installing composer dependencies.'
    required: false

outputs:
  image:
    description: 'The image name that was used to install dependencies. Can be used in subsequent jobs.'
    value: ${{ steps.prepare.outputs.image }}

  env-file:
    description: 'The filename of the env file that was created.'
    value: ${{ steps.env.outputs.filename }}

runs:
  using: composite
  steps:
    - uses: myparcelnl/actions/deprecated@v4
      if: inputs.flags != ''
      with:
        name: 'inputs.flags'
        replacement: 'inputs.composer-args'

    - name: 'Hash composer flags'
      id: flags
      uses: myparcelnl/actions/hash-string@v4
      with:
        string: ${{ inputs.flags }}

    - name: 'Prepare'
      id: prepare
      shell: bash
      env:
        VERSION: ${{ inputs.php-version }}
      #language=bash
      run: |
        echo "image=ghcr.io/myparcelnl/php-xd:$VERSION-cli-alpine" >> $GITHUB_OUTPUT
        echo "cache-dir=/tmp/cache/composer"                       >> $GITHUB_OUTPUT

    - uses: myparcelnl/actions/create-cache-keys@v4
      id: keys-composer
      with:
        key: 'composer'
        restore-keys: 3
        input: |
          ${{ inputs.php-version }}
          ${{ inputs.command }}
          ${{ steps.flags.outputs.hash }}
          ${{ hashFiles('**/composer.json', '**/composer.lock') }}

    - name: 'Handle composer cache'
      uses: actions/cache@v4
      with:
        path: ${{ steps.prepare.outputs.cache-dir }}
        key: ${{ steps.keys-composer.outputs.key }}
        restore-keys: ${{ steps.keys-composer.outputs.restore-keys }}

    - uses: myparcelnl/actions/create-cache-keys@v4
      id: keys-vendor
      with:
        key: 'composer-vendor'
        restore-keys: 3
        input: |
          ${{ inputs.php-version }}
          ${{ inputs.command }}
          ${{ steps.flags.outputs.hash }}
          ${{ hashFiles('**/composer.json', '**/composer.lock') }}

    - name: 'Handle vendor folder cache'
      uses: actions/cache@v4
      with:
        path: vendor
        key: ${{ steps.keys-vendor.outputs.key }}
        restore-keys: ${{ steps.keys-vendor.outputs.restore-keys }}

    - uses: myparcelnl/actions/pull-docker-image@v4
      with:
        image: ${{ steps.prepare.outputs.image }}

    - uses: myparcelnl/actions/composer-create-env-file@v4
      id: env

    - uses: myparcelnl/actions/format-string@v4
      id: composer-args
      with:
        mode: 'args'
        string: |
          --no-interaction
          --no-plugins
          --no-progress
          --no-scripts
          --optimize-autoloader
          ${{ runner.debug == '1' && '--verbose' || '' }}
          ${{ inputs.composer-args || inputs.flags }}

    - name: 'Install composer dependencies'
      shell: bash
      env:
        CACHE_DIR: ${{ steps.prepare.outputs.cache-dir }}
        COMMAND: ${{ inputs.command }}
        COMPOSER_ARGS: ${{ steps.composer-args.outputs.string }}
        ENV_FILE: ${{ steps.env.outputs.filename }}
        IMAGE: ${{ steps.prepare.outputs.image }}
      #language=bash
      run: |
        source "$ENV_FILE"

        docker run \
          --volume "$PWD:/app" \
          --volume "$CACHE_DIR:$COMPOSER_CACHE_DIR" \
          --user "$(id -u):$(id -g)" \
          --env-file "$ENV_FILE" \
          "$IMAGE" \
          composer $COMMAND $COMPOSER_ARGS

name: 'Install composer dependencies'
description: 'Set up PHP and install composer dependencies'

inputs:
  command:
    description: 'The composer command to run.'
    required: false
    default: 'install'

  flags:
    description: 'Flags to use when installing composer dependencies.'
    required: false
    default: |
      --no-plugins
      --no-scripts

  php-version:
    description: 'The php version to use.'
    default: '7.2'
    required: false

outputs:
  image:
    description: 'The image name that was used to install dependencies. Can be used in subsequent jobs.'
    value: ${{ steps.prepare.outputs.image }}

  env-file:
    description: 'The filename of the env file that was created.'
    value: ${{ steps.env.outputs.filename }}

runs:
  using: composite
  steps:
    - name: 'Hash composer flags'
      id: flags
      uses: myparcelnl/actions/hash-string@v4
      with:
        string: ${{ inputs.flags }}

    - name: 'Get image name'
      id: prepare
      shell: bash
      env:
        VERSION: ${{ inputs.php-version }}
      #language=bash
      run: |
        echo "image=ghcr.io/myparcelnl/php-xd:$VERSION-cli-alpine" >> $GITHUB_OUTPUT

    - name: 'Handle composer cache'
      uses: actions/cache@v4
      with:
        path: /tmp/composer-cache
        key: composer-${{ inputs.php-version }}-${{ inputs.command }}-${{ steps.flags.outputs.hash }}-${{ hashFiles('**/composer.json', '**/composer.lock') }}
        restore-keys: |
          composer-${{ inputs.php-version }}-${{ inputs.command }}-${{ steps.flags.outputs.hash }}-
          composer-${{ inputs.php-version }}-${{ inputs.command }}-
          composer-${{ inputs.php-version }}-

    - name: 'Handle vendor folder cache'
      uses: actions/cache@v4
      with:
        path: vendor
        key: composer-vendor-${{ inputs.php-version }}-${{ inputs.command }}-${{ steps.flags.outputs.hash }}-${{ hashFiles('**/composer.json', '**/composer.lock') }}
        restore-keys: |
          composer-vendor-${{ inputs.php-version }}-${{ inputs.command }}-${{ steps.flags.outputs.hash }}-
          composer-vendor-${{ inputs.php-version }}-${{ inputs.command }}-
          composer-vendor-${{ inputs.php-version }}-

    - uses: myparcelnl/actions/pull-docker-image@v4
      with:
        image: ${{ steps.prepare.outputs.image }}

    - uses: myparcelnl/actions/composer-create-env-file@v4
      id: env

    - name: 'Install composer dependencies'
      shell: bash
      env:
        COMMAND: ${{ inputs.command }}
        ENV_FILE: ${{ steps.env.outputs.filename }}
        FLAGS: ${{ steps.flags.outputs.string }}
        IMAGE: ${{ steps.prepare.outputs.image }}
      #language=bash
      run: |
        docker run \
          --env-file "$ENV_FILE" \
          --volume $PWD:/app \
          --volume /tmp/composer-cache:/root/.composer \
          "$IMAGE" \
          composer $COMMAND --no-interaction --no-progress $FLAGS

        sudo chown -R "$(id -u):$(id -g)" vendor

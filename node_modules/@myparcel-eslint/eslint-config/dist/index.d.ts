import { Linter, ESLint } from 'eslint';

declare const arrayBracketNewline: Linter.RuleEntry;
declare const arrayBracketSpacing: Linter.RuleEntry;
declare const blockSpacing: Linter.RuleEntry;
declare const braceStyle: Linter.RuleEntry;
declare const camelcase: Linter.RuleEntry;
declare const commaDangle: Linter.RuleEntry;
declare const commaSpacing: Linter.RuleEntry;
declare const commaStyle: Linter.RuleEntry;
declare const dotLocation: Linter.RuleEntry;
declare const dotNotation: Linter.RuleEntry;
declare const eqeqeq: Linter.RuleEntry;
declare const funcCallSpacing: Linter.RuleEntry;
declare const indent: Linter.RuleEntry;
declare const keySpacing: Linter.RuleEntry;
declare const keywordSpacing: Linter.RuleEntry;
declare const maxLen: Linter.RuleEntry;
declare const noArrayConstructor: Linter.RuleEntry;
declare const noEmptyFunction: Linter.RuleEntry;
declare const noEmptyPattern: Linter.RuleEntry;
declare const noExtraParens: Linter.RuleEntry;
declare const noExtraSemi: Linter.RuleEntry;
declare const noImpliedEval: Linter.RuleEntry;
declare const noIrregularWhitespace: Linter.RuleEntry;
declare const noLossOfPrecision: Linter.RuleEntry;
declare const noMisleadingCharacterClass: Linter.RuleEntry;
declare const noMixedOperators: Linter.RuleEntry;
declare const noMixedRequires: Linter.RuleEntry;
declare const noMixedSpacesAndTabs: Linter.RuleEntry;
declare const noMultiAssign: Linter.RuleEntry;
declare const noMultiSpaces: Linter.RuleEntry;
declare const noMultiStr: Linter.RuleEntry;
declare const noRestrictedSyntax: Linter.RuleEntry;
declare const noSparseArrays: Linter.RuleEntry;
declare const noThrowLiteral: Linter.RuleEntry;
declare const noUnusedExpressions: Linter.RuleEntry;
declare const noUnusedVars: Linter.RuleEntry;
declare const noUseBeforeDefine: Linter.RuleEntry;
declare const objectCurlyNewline: Linter.RuleEntry;
declare const objectCurlySpacing: Linter.RuleEntry;
declare const objectPropertyNewline: Linter.RuleEntry;
declare const operatorLinebreak: Linter.RuleEntry;
declare const quotes: Linter.RuleEntry;
declare const semi: Linter.RuleEntry;
declare const sortKeys: Linter.RuleEntry;
declare const sortVars: Linter.RuleEntry;
declare const spaceBeforeBlocks: Linter.RuleEntry;
declare const spaceBeforeFunctionParen: Linter.RuleEntry;
declare const spaceInParens: Linter.RuleEntry;
declare const spaceInfixOps: Linter.RuleEntry;
declare const spaceUnaryOps: Linter.RuleEntry;
declare const spacedComment: Linter.RuleEntry;
declare const config: ESLint.ConfigData;

export { arrayBracketNewline, arrayBracketSpacing, blockSpacing, braceStyle, camelcase, commaDangle, commaSpacing, commaStyle, config, dotLocation, dotNotation, eqeqeq, funcCallSpacing, indent, keySpacing, keywordSpacing, maxLen, noArrayConstructor, noEmptyFunction, noEmptyPattern, noExtraParens, noExtraSemi, noImpliedEval, noIrregularWhitespace, noLossOfPrecision, noMisleadingCharacterClass, noMixedOperators, noMixedRequires, noMixedSpacesAndTabs, noMultiAssign, noMultiSpaces, noMultiStr, noRestrictedSyntax, noSparseArrays, noThrowLiteral, noUnusedExpressions, noUnusedVars, noUseBeforeDefine, objectCurlyNewline, objectCurlySpacing, objectPropertyNewline, operatorLinebreak, quotes, semi, sortKeys, sortVars, spaceBeforeBlocks, spaceBeforeFunctionParen, spaceInParens, spaceInfixOps, spaceUnaryOps, spacedComment };

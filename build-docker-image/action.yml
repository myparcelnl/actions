name: 'Build Docker image'
description: 'Build Docker image from cache using a registry'

inputs:
  image:
    description: 'Image name'
    required: false
    default: ${{ github.repository }}

  dockerfile:
    description: 'Path to dockerfile'
    required: false
    default: 'Dockerfile'

  context:
    description: 'Directory to build from'
    required: false
    default: '.'

  target:
    description: 'Target stage to build'
    required: false

  registry:
    description: 'Packages registry to use'
    required: false
    default: 'ghcr.io'

  registry-user:
    description: 'Username to log into registry with'
    required: false
    default: ${{ github.actor }}

  registry-password:
    description: 'Password to log into registry with'
    required: true

outputs:
  tagged-image:
    description: 'Created image name with tag'
    value: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}

  version:
    description: 'Generated Docker image version'
    value: ${{steps.meta.outputs.version}}

  tags:
    description: 'Generated Docker tags'
    value: ${{steps.meta.outputs.tags}}

  labels:
    description: 'Generated Docker labels'
    value: ${{steps.meta.outputs.labels}}

  annotations:
    description: 'Generated annotations'
    value: ${{steps.meta.outputs.annotations}}

  json:
    description: 'JSON output of tags and labels'
    value: ${{steps.meta.outputs.json}}

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
      if: ${{ !env.GITHUB_WORKSPACE || !env.GITHUB_SHA }}

    - uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-user }}
        password: ${{ inputs.registry-password }}

    - uses: docker/metadata-action@v5
      id: meta
      with:
        images: ${{ inputs.registry }}/${{ inputs.image }}

    - uses: docker/setup-buildx-action@v3

    - uses: docker/build-push-action@v5
      id: build
      with:
        context: ${{ inputs.context }}
        push: true
        target: ${{ inputs.target }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

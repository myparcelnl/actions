name: 'Create push prerelease artifacts'
description: 'Requires package to have been built'

inputs:
  app-id:
    required: true
    description: 'The app ID of the GitHub app.'

  private-key:
    required: true
    description: 'The private key of the GitHub app.'

  image:
    description: 'PHP Docker image to use'
    required: true

  source-hash:
    description: 'Hash of the source files'
    required: true

  vendor-hash:
    description: 'Hash of the vendor files'
    required: false
    default: ${{ hashFiles('**/composer.json', '**/composer.lock', '**/scoper.inc.php', '**/scoper.*.inc.php') }}

outputs:
  version:
    description: 'The version that was released.'
    value: ${{ steps.version.outputs.version }}

runs:
  using: composite
  steps:
    - name: 'Determine version'
      id: version
      shell: bash
      #language=bash
      run: |
        version=$(npm pkg get version | sed 's/"//g')
        commitsSinceTag=$(git log --oneline v$version.. | wc -l)
        releaseVersion="$version-$commitsSinceTag"

        echo "version=$releaseVersion" >> $GITHUB_OUTPUT

    - uses: myparcelnl/actions/pdk-upgrade@v4
      with:
        app-id: ${{ inputs.app-id }}
        private-key: ${{ inputs.private-key }}
        no-check: true
        no-commit: true
        image: ${{ inputs.image }}

    - uses: myparcelnl/actions/pdk-cache@v4
      with:
        php-version: ${{ inputs.php-version }}
        php-scoper-version: ${{ inputs.php-scoper-version }}
        source-hash: ${{ inputs.source-hash }}
        vendor-hash: ${{ inputs.vendor-hash }}

    - uses: myparcelnl/actions/pdk-release@v4
      with:
        command: 'prerelease'
        image: ${{ inputs.image }}
        version: ${{ steps.version.outputs.version }}
